<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="conversation.Discuss" owl="1">
        <t t-if="whatsappView">
            <div class="o_Discuss d-flex h-100" t-attf-class="{{ className }}"
                t-att-class="{ 'o-isDeviceSmall flex-column align-items-center bg-white': messaging.device.isSmall }"
                t-ref="root"
            >
                <script>
                    function hasClass(element, clsName) {
                        return(' ' + element.className + ' ').indexOf(' ' + clsName + ' ') > -1;
                    }
                    function closeNav() {
                        console.log((' '+document.getElementById("fullSidebar").className+' ').indexOf(' '+"collapsed"+' '));
                        if ((' '+document.getElementById("fullSidebar").className+' ').indexOf(' '+"collapsed"+' ') === -1){
                            console.log("not collapsed");
                            document.getElementById("fullSidebar").style.width = "49px";
                            document.getElementById("fullSidebar").className += " collapsed";
                            if (document.getElementById("Facebookmenu")){
    <!--                            document.getElementById("Facebooktext").remove();-->
                                const drop = document.getElementById("Facebookmenu");
                                drop.style.left = "42px";
                                drop.style.top = "-1px";
                            }
                            if (document.getElementById("Instagrammenu")){
    <!--                            document.getElementById("Instagramtext").remove();-->
                                const dropInsta = document.getElementById("Instagrammenu");
                                dropInsta.style.left = "42px";
                            }
                            if (document.getElementById("Whatsappmenu")){
    <!--                            document.getElementById("Whatsapptext").remove();-->
                                const dropWhat = document.getElementById("Whatsappmenu");
                                dropWhat.style.zIndex = "1";
                                dropWhat.style.width = "42px";
                            }
                        } else {
                            document.getElementById("fullSidebar").style.width = "237px";
                            document.getElementById("fullSidebar").style.backgroundColor = "#354052";
                            document.getElementById("fullSidebar").style.color = "#dee2e6";
                            document.getElementById("fullSidebar").style.paddingTop = "10px";
                            document.getElementById("fullSidebar").className -= " collapsed";
                            if (document.getElementById("Facebookmenu")){
                                const drop = document.getElementById("Facebookmenu");
                                drop.style.left = "230px";
                                drop.style.top = "-1px";
                            }
                            if (document.getElementById("Instagrammenu")){
                                const dropInsta = document.getElementById("Instagrammenu");
                                dropInsta.style.left = "230px";
                            }
                            if (document.getElementById("Whatsappmenu")){
                                const dropWhat = document.getElementById("Whatsappmenu");
                                dropWhat.style.zIndex = "1";
                                dropWhat.style.width = "237px";
                                if (document.getElementsByClassName("o_DiscussSidebarItem_name")){
                                    const dropWhatText = document.getElementsByClassName("o_DiscussSidebarItem_name");
                                    var num = dropWhatText.length;
                                    console.log(dropWhatText.length);
                                    var i;
                                    <!-- for (var i = 0; i < dropWhatText.length; i++) {
                                        console.log(i);     
                                        console.log(dropWhatText[i]);
                                        
                                    } -->
                                }
                                <!-- dropWhatText.forEach(
                                    function myFunction(item) {
                                        item.style.display = "none";
                                    }
                                ); -->
                            }
                        }
                    }
                    function allowDrop (ev) {
                        ev.preventDefault();
                    }
                    function dragStart (ev) {
                        console.log(ev);
                        console.log(ev.target.firstElementChild.firstChild.src);
                        console.log(ev.target.firstElementChild.innerHTML);
                        ev.dataTransfer.setData("text",  ev.target.innerText);
                        ev.dataTransfer.setData("image",  ev.target.firstElementChild.firstChild.src);
                        ev.dataTransfer.effectAllowed = "copy";
                    }
                    function dragStartImg (ev) {
                        console.log(ev);
                        console.log(ev.target.src);
                        console.log(ev.target.innerHTML);
                        ev.dataTransfer.setData("text",  ev.target.id);
                        ev.dataTransfer.effectAllowed = "copy";
                    }
                    function dragStartPDF (ev) {
                        console.log(ev);
                        console.log(ev.target.firstElementChild);
                        ev.dataTransfer.setData("text",  ev.target.firstElementChild.href);
                        ev.dataTransfer.effectAllowed = "copy";
                    }
                    function dragStartpurchase (ev) {
                        console.log(ev);
                        console.log(ev.target.firstElementChild.innerHTML);
                        ev.dataTransfer.setData("text",  (ev.target.childNodes[1].innerText + " "+ev.target.childNodes[2].innerText + " "+ev.target.childNodes[3].innerText + " "+ev.target.childNodes[4].innerText + " "+ev.target.childNodes[5].innerText + " Report: "+ ev.target.childNodes[7].firstElementChild.firstElementChild.href));
                        ev.dataTransfer.effectAllowed = "copy";
                    }
                    function dragStartInvoice (ev) {
                        console.log(ev);
                        console.log(ev.target.firstElementChild.innerHTML);
                        ev.dataTransfer.setData("text",  (ev.target.childNodes[1].innerText + " "+ev.target.childNodes[2].innerText + " "+ev.target.childNodes[3].innerText + " "+ev.target.childNodes[4].innerText + " "+ev.target.childNodes[5].innerText + " Report: "+ ev.target.childNodes[7].firstElementChild.firstElementChild.href));
                        ev.dataTransfer.effectAllowed = "copy";
                    }
                    function dragStartSale (ev) {
                        console.log(ev);
                        console.log(ev.target.firstElementChild.innerHTML);
                        ev.dataTransfer.setData("text",  (ev.target.childNodes[1].innerText + " "+ev.target.childNodes[2].innerText + " "+ev.target.childNodes[3].innerText + " "+ev.target.childNodes[4].innerText + " "+ev.target.childNodes[5].innerText + " Report: "+ ev.target.childNodes[7].firstElementChild.firstElementChild.href));
                        ev.dataTransfer.effectAllowed = "copy";
                    }
                </script>
                <t t-if="!messaging.device.isSmall">
                    <DiscussConversationSidebar className="'o_Discuss_sidebar flex-shrink-0 h-100 pt-3 border-end bg-light'" record="whatsappView"/>
                </t>
                <t t-if="messaging.device.isSmall" t-call="whatsapp.Discuss.content"/>
                <t t-else="">
                    <div class="o_Discuss_content d-flex flex-column flex-grow-1 h-100 overflow-auto">
                        <t t-call="whatsapp.Discuss.content"/>
                    </div>
                </t>
            </div>
        </t>
    </t>

    <t t-name="whatsapp.Discuss.content" owl="1">
        
        <t t-if="whatsappView.discuss.threadView">
            <t name="beforeThread"/>
            <WhatsappThreadView
                className="'o_Discuss_thread'"
                classNameObj="{ 'o-isDeviceSmall w-100': messaging.device.isSmall }"
                record="whatsappView.discuss.threadView"
            />
        </t>
        <t t-if="!whatsappView.discuss.activeThread and (!messaging.device.isSmall or whatsappView.discuss.activeMobileNavbarTabId === 'mailbox')">
            <div class="o_Discuss_noThread d-flex flex-grow-1 align-items-center justify-content-center w-100 bg-white">
                <h4 class="text-muted"><b><i>No conversation selected.</i></b></h4>
            </div>
        </t>
        <t t-if="messaging.device.isSmall and whatsappView.discuss.activeMobileNavbarTabId !== 'mailbox'">
            <t t-if="whatsappView.discuss.activeMobileNavbarTabId === 'chat'">
                <button class="o_Discuss_mobileNewChatButton w-100 p-2 btn btn-secondary border-bottom bg-light" t-on-click="discussView.onClickMobileNewChatButton">
                    Start a conversation
                </button>
            </t>
            <t t-if="whatsappView.discuss.activeMobileNavbarTabId === 'channel'">
                <button class="o_Discuss_mobileNewChannelButton w-100 p-2 btn btn-secondary border-bottom bg-light" t-on-click="discussView.onClickMobileNewChannelButton">
                    New Channel
                </button>
            </t>
        </t>
        <!-- <t t-if="whatsappView.discuss.notificationListView">
            <NotificationList className="'o_Discuss_notificationList flex-grow-1 w-100'" record="discussView.discuss.notificationListView"/>
        </t>
        <t t-if="whatsappView.discuss.mobileMessagingNavbarView">
            <MobileMessagingNavbar
                className="'o_Discuss_mobileNavbar w-100'"
                record="whatsappView.discuss.mobileMessagingNavbarView"
            />
        </t> -->
    </t>

</templates>
